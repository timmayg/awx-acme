---
- name: Tasks in this Playbook are for testing purposes only
  hosts: localhost
  gather_facts: false
  vars:
   vault_url: "https://vault.theglens.net:8200"
   vault_mount: "kv"

  tasks:

   - name: 01 - Read The Servers Private Key from Vault
     community.hashi_vault.vault_kv2_get:
      url: "{{ vault_url }}"
      engine_mount_point: "{{ vault_mount }}"
      path: "ssl_vpn_theglens_net_keys"
      auth_method: token
      token: "{{ ansible_password }}"
     register: server_private_key

   - name: 02 - Read The Let's Encrypt Private Key from Vault
     community.hashi_vault.vault_kv2_get:
      url: "{{ vault_url }}"
      engine_mount_point: "{{ vault_mount }}"
      path: "le_stage_key"   # options: le_stage_key, le_prod_key
      auth_method: token
      token: "{{ ansible_password }}"
     register: le_private_key

   - name: 02 - Read The Cloudflare API Key from Vault
     community.hashi_vault.vault_kv2_get:
      url: "{{ vault_url }}"
      engine_mount_point: "{{ vault_mount }}"
      path: "cloudflare_token"
      auth_method: token
      token: "{{ ansible_password }}"
     register: cloudflare_token

#   - name: Print 
#     ansible.builtin.debug:
#       msg: "{{ server_private_key.secret.public_key }}"
#       msg: "{{ server_private_key.secret.private_key }}"


   - name: 03 - Generate an OpenSSL Certificate Signing Request
     community.crypto.openssl_csr:
       path: ~/test-csr.theglens.net.csr
       privatekey_content: "{{ server_private_key.secret.private_key }}"
       common_name: test-csr.theglens.net


   - name: 04 - Create an ACME Challenge
     community.crypto.acme_certificate:
       account_email: timmayglen@gmail.com
       account_key_content: "{{ le_private_key.secret.private_key }}"
       csr: ~/test-csr.theglens.net.csr
       cert: ~/test-csr.theglens.net.cer
       chain: ~/test-csr.theglens.net.chain
       fullchain: ~/test-csr.theglens.net.fullchain
       challenge: dns-01
       acme_directory: https://acme-staging-v02.api.letsencrypt.org/directory
       acme_version: 2
       # Renew if the certificate is at least 30 days old
       remaining_days: 60
     register: challenge_response


   - name: Print
     ansible.builtin.debug:
       msg: "{{ challenge_response }}"


   - name: Display challenge_data_dns
     debug:
       var: msg.challenge_data_dns


   - name: Timmay HARD STOP this Playbook
     ansible.builtin.meta: end_play



   - name: Print the DNS-01 resource value
     ansible.builtin.debug:
       msg: "{{ challenge_response['msg']['challenge_data_dns'] }}"









   - name: Create TXT record with value "unique value"
     community.general.cloudflare_dns:
       api_token: "{{ cloudflare_token.secret.api_token }}"
       record: testansible
       type: TXT
       value: this-is-a-unique-value
       state: present    # present (default), absent
       zone: theglens.net
     register: cloudflare_response

   - name: Print 
     ansible.builtin.debug:
       msg: "{{ challenge_response }}"






#   - name: Print 
#     ansible.builtin.debug:
#       msg: "{{ response.secret.public_key }}"
#       msg: "{{ response.secret.private_key }}"
