---
- name: Tasks in this Playbook are for testing purposes only
  hosts: localhost
  gather_facts: false
  vars:
   vault_url: "https://vault.theglens.net:8200"
   vault_mount: "kv"
   vault_secret: "homenet_inet_ip"

  tasks:
   - name: Get the public IP address of the network
     ansible.builtin.uri:
       url: https://api.ipify.org?format=json
       method: Get
     changed_when: false
     register: public_ip
     until: public_ip.status == 200
     retries: 6
     delay: 10

   - name: Print using msg
     ansible.builtin.debug:
#       msg: "{{ public_ip.json.ip }}"
      msg: "{{ public_ip }}"

   - name: 01 - Read The Homenet Inet IP from Vault
     community.hashi_vault.vault_kv2_get:
       url: "{{ vault_url }}"
       engine_mount_point: "{{ vault_mount }}"
       path: "{{ vault_secret }}"
       auth_method: token
       token: "{{ ansible_password }}"
     register: vault_homenet_inet_ip

   - name: 02 - Set the IP address as a fact
     ansible.builtin.set_fact:
      vault_ip_address: "{{ vault_homenet_inet_ip.raw.data.data.ip_addr }}"

   - name: Print using a var
     ansible.builtin.debug:
      var: vault_ip_address



#   - name: Check if IP addresses are the same
#     ansible.builtin.debug:
#       msg: "Old and current IP addresses are the same. Stopping execution."
#     when: public_ip == vault_ip_address
#     register: check_ip_result

   - name: Stop execution if IPs are the same
     ansible.builtin.meta: end_play
     when: public_ip == vault_ip_address

#   - name: Proceed with tasks if IPs are different
#     ansible.builtin.debug:
#       msg: "Old IP: {{ public_ip }}; Current IP: {{ vault_ip_address }}. Continuing with tasks."
#     when: public_ip != vault_ip_address


   - name: 01 - Read Cloudflare API Token from Vault
     community.hashi_vault.vault_kv2_get:
       url: "{{ vault_url }}"
       engine_mount_point: "{{ vault_mount }}"
       path: cloudflare_token
       auth_method: token
       token: "{{ ansible_password }}"
     register: cloudflare_token

   - name: Update A record with New IP address
     community.general.cloudflare_dns:
       api_token: "{{ cloudflare_token }}"
       account_email: "timmayglen@gmail.com"
       record: ssl-vpn
       type: A
       value: "{{ public_ip }}"
       state: present    # present (default), absent
       zone: theglens.net
     register: response




   - name: Timmay HARD STOP this Playbook
     ansible.builtin.meta: end_play










   - name: Query Google DNS for FQDN ssl-vpn.theglens.net
     ansible.builtin.uri:
       url: "https://dns.google/resolve?name=ssl-vpn.theglens.net&type=a&do=1"
       method: GET
       return_content: true
     register: dns_result

   - name: Parse the DNS response and set the IP address as a fact
     ansible.builtin.set_fact:
       current_ip_address: "{{ (dns_result.content | from_json).Answer[0].data }}"

   - name: Print 
     ansible.builtin.debug:
       var: current_ip_address


